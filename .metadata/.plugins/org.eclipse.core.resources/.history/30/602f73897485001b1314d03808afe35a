package bsu.rfe.java.group7.lab7.Ryndin.var1;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
@SuppressWarnings("serial")
public class MainFrame extends JFrame {
private static final String FRAME_TITLE = "Клиент мгновенных сообщений";
private static final int FRAME_MINIMUM_WIDTH = 500;
private static final int FRAME_MINIMUM_HEIGHT = 500;
private static final int FROM_FIELD_DEFAULT_COLUMNS = 10;
private static final int TO_FIELD_DEFAULT_COLUMNS = 20;
private static final int INCOMING_AREA_DEFAULT_ROWS = 10;
private static final int OUTGOING_AREA_DEFAULT_ROWS = 5;
private static final int SMALL_GAP = 5;
private static final int MEDIUM_GAP = 10;
private static final int LARGE_GAP = 15;
private static final int SERVER_PORT = 4567;
private final JTextField textFieldFrom;
private final JTextField textFieldTo;
private final JTextArea textAreaIncoming;
private final JTextArea textAreaOutgoing;
public MainFrame() {
super(FRAME_TITLE);
setMinimumSize(
new Dimension(FRAME_MINIMUM_WIDTH, FRAME_MINIMUM_HEIGHT));
//Центрирование окна
final Toolkit kit = Toolkit.getDefaultToolkit();
setLocation((kit.getScreenSize().width - getWidth()) / 2,
(kit.getScreenSize().height - getHeight()) / 2);
//Текстовая область для отображения полученных сообщений
textAreaIncoming = new JTextArea(INCOMING_AREA_DEFAULT_ROWS, 0);
textAreaIncoming.setEditable(false);
//Контейнер, обеспечивающий прокрутку текстовой области
final JScrollPane scrollPaneIncoming = 
new JScrollPane(textAreaIncoming);
//Подписи полей
final JLabel labelFrom = new JLabel("Подпись");
final JLabel labelTo = new JLabel("Получатель");
//Поля ввода имени пользователя и адреса получателя
textFieldFrom = new JTextField(FROM_FIELD_DEFAULT_COLUMNS);
textFieldTo = new JTextField(TO_FIELD_DEFAULT_COLUMNS);
//Текстовая область для ввода сообщения
textAreaOutgoing = new JTextArea(OUTGOING_AREA_DEFAULT_ROWS, 0);
//Контейнер, обеспечивающий прокрутку текстовой области
final JScrollPane scrollPaneOutgoing = 
new JScrollPane(textAreaOutgoing);
//Панель ввода сообщения
final JPanel messagePanel = new JPanel();
messagePanel.setBorder(
BorderFactory.createTitledBorder("Сообщение"));
//Кнопка отправки сообщения
final JButton sendButton = new JButton("Отправить");
sendButton.addActionListener(new ActionListener() {
@Override
public void actionPerformed(ActionEvent e) {
sendMessage();
}
});
//Компоновка элементов панели "Сообщение"
final GroupLayout layout2 = new GroupLayout(messagePanel);
messagePanel.setLayout(layout2);
layout2.setHorizontalGroup(layout2.createSequentialGroup()
.addContainerGap()
.addGroup(layout2.createParallelGroup(Alignment.TRAILING)
.addGroup(layout2.createSequentialGroup()
.addComponent(labelFrom)
.addGap(SMALL_GAP)
.addComponent(textFieldFrom)
.addGap(LARGE_GAP)
.addComponent(labelTo)
.addGap(SMALL_GAP)
.addComponent(textFieldTo))
.addComponent(scrollPaneOutgoing)
.addComponent(sendButton))
.addContainerGap());
layout2.setVerticalGroup(layout2.createSequentialGroup()
.addContainerGap()